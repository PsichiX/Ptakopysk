!intuicio	// every Intuicio program must start with header.

!registers-i 3
!stack 128 // we will use call stack with 128 bytes size.

// intialize some static data.
!data bytes txtOnStart "> Here we start our program", 10, 0
!data bytes txtOnEnd "> Here we end our program", 10, 0
!data bytes txtMainBegin ">> Here we are in main function", 10, 0
!data bytes txtMainEnd ">> Here we back to main function", 10, 0
!data bytes txtSome ">>> Here we are in some function", 10, 0
!data bytes nl 10, 0
!data bytes add " + ", 0
!data bytes result " = ", 0
!data int num0 5
!data int num1 2

!start	// start program code.
	
	dbgb $txtOnStart	// on start we go to main function so we skip some instructions.
	call @main			// use "call" command to jump into function and return here back.
	goto @exit			// when we back from main, jump to end of this program.
	
	// ------
	
	// functions are just jump spaces.
	!jump someFunction
		dbgb $txtSome
		// pop arguments from stack.
		popi regi:2
		popi regi:1
		// calculate result.
		addi 0, 1, 2
		// print arguments and result.
		dbgi regi:1
		dbgb $add
		dbgi regi:2
		dbgb $result
		dbgi regi:0
		dbgb $nl
	ret	// return to place from function was called.
	
	// here we do main work.
	!jump main
		dbgb $txtMainBegin
		// push arguments on stack.
		pshi $num0
		pshi $num1
		// call function.
		call @someFunction
		dbgb $txtMainEnd
	ret
	
	// ------
	
	// here we end our program.
	!jump exit
	dbgb $txtOnEnd
	
!exit // end program code.
